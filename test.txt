package main

import (
	"fmt"
	prompt "github.com/c-bata/go-prompt"
	"os"
	"strings"
	"time"
)

const (
	Errors = "errs"
	Warns = "warns"
	Barriers = "barriers"
	DirTree = "dir tree"
	Exit = "exit"
)

var suggestions = []prompt.Suggest{
	{Errors, "显示所有错误"},
	{Warns, "显示所有告警"},
	{Barriers, "显示所有栅栏信息"},
	{DirTree, "展示文件树"},
	{Exit, "退出程序"},
}

var history = make([]string, 0, 100)

func completer(d prompt.Document) []prompt.Suggest {
	w := d.GetWordBeforeCursor()
	return prompt.FilterHasPrefix(suggestions, w, true)
}

func executor(in string) {
	in = strings.TrimSpace(in)
	blocks := strings.Split(in, " ")
	switch blocks[0] {
	case "exit":
		fmt.Println("Bye!")
		time.Sleep(1 * time.Second)
		os.Exit(0)
	default:
		addHistory(in)
		fmt.Printf("You choose: %s\n", in)
	}
}

func addHistory(cmd string) {
	if len(history) >= 80 {
		history = history[40:]
	}
	history = append(history, cmd)
}

func main() {
	// Print a large text with differently colored letters.
	//pterm.DefaultBigText.WithLetters(
	//	pterm.NewLettersFromStringWithStyle("H", pterm.NewStyle(pterm.FgCyan)),
	//	pterm.NewLettersFromStringWithStyle("uawei", pterm.NewStyle(pterm.FgLightMagenta))).
	//	Render()
	fmt.Println("Please enter command.")
	p := prompt.New(
		executor,
		completer,
		prompt.OptionPrefix("FlowCheck>"),
		prompt.OptionTitle("flow-check"),
		prompt.OptionHistory(history),
		prompt.OptionPrefixTextColor(prompt.Purple),
	)
	p.Run()
}
